{
  "name": "narrow",
  "description": "Library shrinks a given callback parallel execution concurrency in a limited number of threads, receiving the bunch of data (array of tasks).",
  "version": "0.0.2",
  "url": "http://github.com/0ctave/node-narrow",
  "author": {
    "name": "Yuriy Bogdanov",
    "email": "chinsay@gmail.com"
  },
  "main": "lib/narrow",
  "engines": {
    "node": ">=0.3.6"
  },
  "dependencies": {},
  "readme": "\n# Introduction\nnode-narrow is a library which shrinks a given callback parallel execution in a limited number of threads, receiving the bunch of data (array of tasks).\n\nInspired from [node-async#queue](https://github.com/caolan/async#queue).\n\n# Synopsis\nPush a big bunch of data and handle it in maximum 5 simultaneous threads:\n\n\tvar Narrow = require('narrow');\n\t\n\tvar narrow = new Narrow(5, function(str, callback){\n\t    setTimeout(function(){\n\t        callback(null, str.toUpperCase());\n\t    }, 1000)\n\t})\n\t\n\tvar tasks = [];\n\tfor (var i = 0; i < 10; i++) {\n\t    tasks.push('something' + i);\n\t}\n\n\tvar start = new Date;\n\n\tnarrow.on('complete', function(result){\n\t    console.log('%s after %dms', result, new Date - start);\n\t});\n\n\tnarrow.pushAll(tasks, function(){\n\t    console.log('done');\n\t})\n\nWill output:\n\n\tSOMETHING0 after 1002ms\n\tSOMETHING1 after 1012ms\n\tSOMETHING2 after 1012ms\n\tSOMETHING3 after 1012ms\n\tSOMETHING4 after 1012ms\n\tSOMETHING5 after 2012ms\n\tSOMETHING6 after 2012ms\n\tSOMETHING7 after 2013ms\n\tSOMETHING8 after 2016ms\n\tSOMETHING9 after 2016ms\n\tdone\n\t\nTimeouts support\n\n\ttodo: document\n\t\nSee more examples in [examples](https://github.com/0ctave/node-narrow/tree/master/examples) directory.\n\n# Installation\n\tnpm install narrow",
  "readmeFilename": "README.md",
  "_id": "narrow@0.0.2",
  "dist": {
    "shasum": "fc2f0c932a800b1c0b9cdb23125e58f6e38c4603"
  },
  "_from": "narrow@>= 0.0.2",
  "_resolved": "https://registry.npmjs.org/narrow/-/narrow-0.0.2.tgz"
}
